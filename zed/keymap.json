[
  {
    "context": "Editor || Workspace"
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-/": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "EmptyPane || SharedScreen || vim_mode == normal || ProjectPanel",
    "bindings": {
      "space e": "workspace::ToggleLeftDock",
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      "space b d": "pane::CloseActiveItem",
      "space b l": "pane::CloseItemsToTheLeft",
      "space b r": "pane::CloseItemsToTheRight",
      "space b a": "pane::CloseInactiveItems",
      "space space": "file_finder::Toggle",
      "space /": "pane::DeploySearch",
      // "space /": [
      //   "task::Spawn",
      //   { "task_name": "Live Grep", "reveal_target": "center" }
      // ],
      "space g g": [
        "task::Spawn",
        { "task_name": "Lazygit", "reveal_target": "center" }
      ]
    }
  },

  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      // Works when the current selection in the project panel is a directory.
      // I think this should also work when the current selection is a file
      // on whichever directory that file is in.
      "/": "project_panel::NewSearchInDirectory"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "space g B": "editor::OpenPermalinkToLine",
      "space g b": "editor::OpenGitBlameCommit",
      // "ctrl-w z": "workspace::ToggleZoom",
      // "ctrl-w t": "terminal_panel::ToggleFocus",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "g shift-i": "editor::GoToImplementation",
      "g shift-k": "editor::ShowSignatureHelp",
      "g d": "editor::GoToDefinition",
      "g y": "editor::GoToTypeDefinition",
      "g D": "editor::GoToDeclaration",
      // "g ]": "editor::GoToDiagnostic",
      // "g [": "editor::GoToPrevDiagnostic",
      "g r": "editor::FindAllReferences",
      "shift-k": "editor::Hover",
      // code actions does both source and code actions at the same time. There's no source actions only;
      "space c a": "editor::ToggleCodeActions",
      // TODO: there's not such a thing as line actions it seems, find a way to do it.
      "space c d": "editor::ToggleCodeActions",
      "space c r ": "editor::Rename",
      // "space w": "workspace::Save",
      "ctrl+d": [
        "editor::MovePageDown",
        {
          "center_cursor": true
        }
      ],
      "ctrl+u": [
        "editor::MovePageUp",
        {
          "center_cursor": true
        }
      ]
    }
  },
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "g c c": "editor::ToggleComments"
    }
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "g c": "editor::ToggleComments",
      "shift-k": "editor::MoveLineUp",
      "shift-j": "editor::MoveLineDown",
      "s a": ["vim::PushAddSurrounds", {}]
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-b z": "workspace::ToggleZoom",
      "ctrl-u": "terminal::Clear"
    }
  },
  {
    "context": "Dock",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "GitPanel || ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView",
    "bindings": {
      "space w v": "pane::SplitVertical",
      "space w s": "pane::SplitHorizontal"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "ctrl-a": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "ctrl-y": "editor::ConfirmCompletion",
      "tab": "editor::ComposeCompletion"
    }
  }
]
